# -*- coding: utf-8 -*-
"""weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Jvham5LAnPChWg6FRI6q94byw4HMhsq

Run this in a terminal

pip install protobuf
pip install mapbox-vector-tile
protoc --python_out=. vector_tile.proto
"""

import requests as rq
import pandas as pd
from datetime import datetime
import time
import pytz

# Import the data for the API and transform it into daile average

url = 'https://api.open-meteo.com/v1/forecast'  # API url

parameters = {            # parameters to download the information
    'latitude': 45.4642,
    'longitude': 9.1895,
    'hourly': 'temperature_2m,relative_humidity_2m,precipitation,wind_speed_10m',
    "forecast_days": 1
}

response = rq.get(url, params=parameters)
data = response.json()

# Print the coordenates from the weather station

#print(f"Coordinates {data.get('latitude', 'No latitude provided')}°N {data.get('longitude', 'No longitud provided')}°E")
time_zone = pytz.timezone('Europe/Rome')
now = datetime.now(time_zone).hour
#print(now)
current_weather = pd.DataFrame(data['hourly']) # create the dataframe weather form the information of hourly in the dictionary
timestamp= int(datetime.now(time_zone).timestamp())
#print(current_weather)
#print(datetime.now(time_zone))
#print(current_weather.iloc[now,1])
#print(current_weather.iloc[now,2])
#print(current_weather.iloc[now,3])
#print(current_weather.iloc[now,4])

#Connect to database

from sqlalchemy import create_engine, text, inspect, Table, Column, Integer, String, MetaData, BIGINT, REAL, SMALLINT, DateTime
import pandas as pd

db_conn = create_engine("postgresql://colab:z9CeH0zNAiM5IaVpfctf1r@db:5432/datasciencesociety")
inspector = inspect(db_conn)

# Step 3: Get the names of all tables in the database
tables = inspector.get_table_names()
#print("Tables in the database:", tables)

metadata = MetaData()


from sqlalchemy import create_engine, text, inspect, Table, Column, Integer, String, MetaData, DATETIME
import pandas as pd

# Define a new table
new_table = Table('weather', metadata,
                  Column('date', DateTime, primary_key=True),
                  Column('temperature', REAL),
                  Column('humidity', SMALLINT),
                  Column('precipitation', REAL),
                  Column('wind', REAL)
                  )

# Create the table in the database
metadata.create_all(db_conn)

import logging

# Configure logging to write to a file
logging.basicConfig(filename='/home/ago/scriptsDataScience/weather_db_insertion.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')
try:
  with db_conn.connect() as conn:
      conn.execute(new_table.insert(), [{
          'date':datetime.now(time_zone),
          'temperature':float(current_weather.iloc[now,1]),
          'humidity':int(current_weather.iloc[now,2]),
          'precipitation':float(current_weather.iloc[now,3]),
          'wind':float(current_weather.iloc[now,4])
          }
                                        ])
      conn.commit()
      logging.info(f"Insertion successful")
except Exception as e:
      logging.error(f"Insertion failed \n {e}")